variables:
  PACKAGE_PATH: "/go/src/gitlab.com/sparetimecoders/k8s-go"
  GO111MODULE: "on"
  GOCACHE: "${CI_PROJECT_DIR}/_go/cache"

# A hack to make Golang-in-Gitlab happy
before_script:
  - mkdir -p $(dirname ${PACKAGE_PATH}) ${CI_PROJECT_DIR}/_go/{pkg,bin,cache}
  - rm -rf /go/pkg
  - ln -s ${CI_PROJECT_DIR} ${PACKAGE_PATH}
  - ln -s ${CI_PROJECT_DIR}/_go/pkg /go/pkg
  - ln -s ${CI_PROJECT_DIR}/_go/bin /go/bin
  - cd ${PACKAGE_PATH}

cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - _go
  untracked: true

stages:
  - deps
  - test
  - build

deps:
  stage: deps
  image: golang:1.12
  script:
    - go get

test:
  stage: test
  dependencies:
    - deps
  image: golang:1.12
  script:
    - go fmt $(go list ./...)
    - go vet $(go list ./...)
    - CGO_ENABLED=1 go test -race $(go list ./...) -coverprofile .testCoverage.txt

build:
  stage: build
  dependencies:
    - deps
  image: golang:1.12
  script:
    - go get github.com/GeertJohan/go.rice/rice
    - go get github.com/ahmetb/govvv
    - for p in $(go list ./...); do  rice embed-go -i $p; done
    - rice embed-go
    - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 govvv build -o release/k8s-go -ldflags '-w -s'
  artifacts:
    paths:
      - release/

